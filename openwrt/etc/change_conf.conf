<?php
include_once("/www/common.php");

loadEnv();
$rule =  array (
/*public_ip => array (
    'desc' => "IP Publique",
    'valid' => "/^.*$/",
    'get_cmd' => '',
    'set_cmd' => ''
),*/
'whitelist_domain' => array (
    'desc' => "liste des domaines autorisés",
    'valid' => "/^.*$/",
    'get_cmd_array' => "grep ipset /etc/dnsmasq.conf | sed 's#ipset=/\(.*\)/whitelist_domain#\\1#'",
    'set_cmd_array' => "sed -i '/ipset=\/.*\/whitelist_domain/d' /etc/dnsmasq.conf; for i in %1; do echo ipset=/\$i/whitelist_domain >> /etc/dnsmasq.conf; done",
    'service_restart' => '/etc/init.d/dnsmasq restart',
),
'vpn0'     => array (
    'desc' => "Serveur VPN",
    'valid' => "/^.*$/",
    'get_cmd' => "uci get openvpn.client.remote | awk '{print $1}'",
    'set_cmd' => 'uci set openvpn.client.remote="%1 1194"; uci commit',
    'service_restart' => '/etc/init.d/openvpn restart',
),
'gateway_id'   => array (
    'desc' => "Gateway Id (Splash)",
    'valid' => "/^.*$/",
    'wr_value' => "GTWNAME",
),
'duree_connexion'  => array (
    'desc' => "Durée de la connexion (en secondes)",
    'valid' => "/^.*$/",
    'wr_value' => "CTIMEOUT",
),
'gtwurl' => array (
    'desc' => "URL portail",
    'valid' => "/^.*$/",
    'wr_value' => "GTWURL",
    'service_restart' => '/etc/init.d/wifi_rover stop; /etc/init.d/wifi_rover start',
),
'portal' => array (
    'desc' => "DNS du portal",
    'valid' => "/^.*$/",
    'wr_value' => "PORTAL",
    'service_restart' => '/etc/init.d/wifi_rover stop; /etc/init.d/wifi_rover start',
),
'portalmode0' => array (
    'desc' => "Mode du portal",
    'valid' => "/^.*$/",
    'wr_value' => "PORTALMODE",
    'service_restart' => '/etc/init.d/wifi_rover stop; /etc/init.d/wifi_rover start',
),
'proxy_actif'  => array (
    'desc' => "Proxy Actif ",
    'valid' => "/^.*$/",
    'wr_value' => "PROXYACTIVE",
    'service_restart' => '/etc/init.d/wifi_rover stop; /etc/init.d/wifi_rover start',
),
'proxy0' => array (
    'desc' => "Proxy",
    'valid' => "/^.*$/",
    'wr_value' => "PROXY",
    'service_restart' => '/etc/init.d/wifi_rover stop; /etc/init.d/wifi_rover start',
),
'logger0' => array (
    'desc' => "IP du Logger",
    'valid' => "/^.*$/",
    'get_cmd' => 'uci get softflowd.@softflowd[0].host_port | cut -d ":" -f 1',
    'set_cmd' => 'uci set softflowd.@softflowd[0].host_port="%1:$(uci get softflowd.@softflowd[0].host_port | cut -d ":" -f 2)"; uci commit',
    'service_restart' => '/etc/init.d/softflowd restart',
),
'rflow_port' => array (
    'desc' => "Port de log (Rflow_port)",
    'valid' => "/^.*$/",
    'get_cmd' => 'uci get softflowd.@softflowd[0].host_port | cut -d ":" -f 2',
    'set_cmd' => 'uci set softflowd.@softflowd[0].host_port="$(uci get softflowd.@softflowd[0].host_port | cut -d ":" -f 1):%1"; uci commit',
    'service_restart' => '/etc/init.d/softflowd restart',
),
'supra_whiteliste'  => array (
    'desc' => "SupraWhitelist",
    'valid' => "/^.*$/",
    'wl_value' => "SUPRAWHITELIST",
    'service_restart' => '/etc/init.d/wifi_rover stop; /etc/init.d/wifi_rover start',
),
'whiteliste'  => array (
    'desc' => "Whitelist",
    'valid' => "/^.*$/",
    'wl_value' => "WHITELIST",
    'service_restart' => '/etc/init.d/wifi_rover stop; /etc/init.d/wifi_rover start',
),
'whitelist_proxy'  => array (
    'desc' => "Whitelist avec proxy",
    'valid' => "/^.*$/",
    'wl_value' => "WHITELIST_PROXY",
    'service_restart' => '/etc/init.d/wifi_rover stop; /etc/init.d/wifi_rover start',
),
'blackliste'  => array (
    'desc' => "blacklist",
    'valid' => "/^.*$/",
    'wl_value' => "BLACKLIST",
    'service_restart' => '/etc/init.d/wifi_rover stop; /etc/init.d/wifi_rover start',
),
'unifi0' => array (
    'desc' => "Démarrage du portail",
    'valid' => "/^.*$/",
    'wr_value' => "UNIFI",
    'set_cmd' => 'sed -i "/unifi/d" /etc/hosts; if [ "%1" != "0" ]; then echo "%1 unifi" >> /etc/hosts; fi',
    'service_restart' => '/etc/init.d/dnsmasq reload',
),
'start'  => array (
    'desc' => "Démarrage du portail",
    'valid' => "/^.*$/",
    'get_cmd' => "awk '/\/etc\/init.d\/wifi_rover start/  { printf \"%d:%02d\", $2, $1}' /etc/crontabs/root",
    'set_cmd' => '/sbin/set_wr_cron start %1',
    'service_restart' => '/etc/init.d/cron restart',
),
'stop'   => array (
    'desc' => "Arrêt du portail",
    'valid' => "/^.*$/",
    'get_cmd' => "awk '/\/etc\/init.d\/wifi_rover stop/  { printf \"%d:%02d\", $2, $1}' /etc/crontabs/root",
    'set_cmd' => '/sbin/set_wr_cron stop %1',
    'service_restart' => '/etc/init.d/cron restart',
),
'single_session' => array (
    'desc' => "Single Session",
    'valid' => "/^.*$/",
    'wr_value' => "SINGLESESSION",
),
'ssid'  => array (
    'desc' => "WIFI Identifier",
    'valid' => "/^.*$/",
    'get_cmd' => '/sbin/change_wifi get ssid',
    'set_cmd' => '/sbin/change_wifi set ssid "%1"',
    'service_restart' => 'wifi',
),

'corporate_ssid'  => array (
    'desc' => "Corporate SSID",
    'valid' => "/^.*$/",
    'get_cmd' => '/sbin/change_wifi get ssid_corp',
    'set_cmd' => '/sbin/change_wifi set ssid_corp "%1"',
    'service_restart' => 'wifi;/etc/init.d/dnsmasq restart',
),
'corporate_key'  => array (
    'desc' => "Corporate KEY",
    'valid' => "/^.*$/",
    'get_cmd' => '/sbin/change_wifi get key',
    'set_cmd' => '/sbin/change_wifi set key "%1"',
    'service_restart' => 'wifi',
),
'corporate_dns'  => array (
    'desc' => "Corporate DNS",
    'valid' => "/^.*$/",
    'get_cmd' => "awk -F ',' '/dhcp-option=lan1,6,/  { print $3}' /etc/dnsmasq.conf || echo ''",
    'set_cmd' => 'sed -i "/dhcp-option=lan1,6,/d" /etc/dnsmasq.conf; if [ -n "%1" ]; then echo "dhcp-option=lan1,6,%1" >> /etc/dnsmasq.conf; fi',
    'service_restart' => '/etc/init.d/dnsmasq reload',
),
'corporate_network' => array (
    'desc' => "Reseau Corporate",
    'valid' => "/^.*$/",
    'wr_value' => "CORPORATENET",
    'service_restart' => '/etc/init.d/wifi_rover stop; /etc/init.d/wifi_rover start',
),

'corporate_proxy' => array (
    'desc' => "Reseau Corporate derriere proxy",
    'valid' => "/^.*$/",
    'wr_value' => "CORPORATEPROXY",
    'service_restart' => '/etc/init.d/wifi_rover stop; /etc/init.d/wifi_rover start',
),
'corporate_capt'  => array (
    'desc' => "log corportate network",
    'valid' => "/^.*$/",
    'wr_value' => "CORPORATECAPT",
    'service_restart' => '/etc/init.d/rflow_client restart',
),
'autowhitelist_lease' => array (
    'desc' => "Duree auto whitelist",
    'valid' => "/^.*$/",
    'wr_value' => "AUTOWHITELIST",
),

'hostname' => array (
    'desc' => "nom de la machine",
    'valid' => "/^.*$/",
    'get_cmd' => "uci get system.@system[0].hostname",
    'set_cmd' => 'uci set system.@system[0].hostname="%1"; uci commit',
    'service_restart' => 'echo $(uci get system.@system[0].hostname) > /proc/sys/kernel/hostname',
),
'lan_gateway' => array (
    'desc' => "Adresse IP LAN envoyée au portail",
    'valid' => "/^.*$/",
    'wr_value' => "GTW",
    'php_restart' => 'wifi_rover_restart',
    'service_restart' => '/etc/init.d/wifi_rover stop; /etc/init.d/wifi_rover start',
),

'alias_borne'  => array (
    'desc' => "Alias de la borne",
    'valid' => "/^.*$/",
    'get_cmd' => "awk '/" . GTWADDR . "/  { print $2}' /etc/hosts || echo ''",
    'set_cmd' => 'sed -i "/^' . GTWADDR . '/d" /etc/hosts; if [ -n "%1" ]; then echo "' . GTWADDR . ' %1" >> /etc/hosts; fi',
    'service_restart' => '/etc/init.d/dnsmasq restart',
),

'ref_mag'   => array (
    'desc' => "Reference MAGASIN",
    'valid' => "/^.*$/",
    'wr_value' => "STOREID",
),
);

